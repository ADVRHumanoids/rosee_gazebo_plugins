<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rosee_gazebo_plugins)/worlds/rosee.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="false"/>
  </include>

  <param name="robot_description" textfile="$(find ros_end_effector)/configs/urdf/test_ee_gazebo.urdf"/>
  <param name="robot_description_semantic" textfile="$(find ros_end_effector)/configs/srdf/test_ee.srdf" />

<!-- Spawn a robot into Gazebo -->
	 <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find ros_end_effector)/configs/urdf/test_ee_gazebo.urdf -urdf -z 1 -model test_ee" /> 


  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find rosee_gazebo_plugins)/config/test_ee_control.yaml" command="load" />

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/test_ee" args="joint_state_controller left_finger_to_left_fingertip_position_controller "/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/test_ee/joint_states" />
  </node>


</launch>
